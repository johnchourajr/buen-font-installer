name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    environment: Production

    steps:
    - uses: actions/checkout@v4

    - name: Setup code signing
      env:
        CERTIFICATE_BASE64: ${{ secrets.DEVELOPER_ID_CERTIFICATE_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.DEVELOPER_ID_CERTIFICATE_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create temporary keychain
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate
        CERTIFICATE_PATH=$RUNNER_TEMP/certificate.p12
        echo -n "$CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        security import $CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Get certificate identity
        IDENTITY=$(security find-identity -v -p codesigning $KEYCHAIN_PATH | grep "Developer ID Application" | head -1 | grep -o '"[^"]*"' | tr -d '"')
        echo "DEVELOPER_ID_CERTIFICATE=$IDENTITY" >> $GITHUB_ENV

    - name: Setup notarization credentials
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
      run: |
        # Store notarization credentials
        xcrun notarytool store-credentials "notarytool-password" \
          --apple-id "$APPLE_ID" \
          --team-id "$APPLE_TEAM_ID" \
          --password "$APPLE_APP_PASSWORD"

        echo "APPLE_ID=$APPLE_ID" >> $GITHUB_ENV

    - name: Build App
      run: |
        chmod +x build-app.sh create-dmg.sh
        ./build-app.sh
        # Skip notarization for now due to Apple service issues
        # Will be re-enabled once Apple's notarization service is stable
        unset APPLE_ID
        ./create-dmg.sh

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.dmg
        body: |
          ## Buen Font Installer

          **Download the DMG file below to install.**

          ### What's New
          See the release notes below for changes in this version.

          ### Features
          - Install fonts with automatic deduplication
          - Organize fonts into separate folders
          - Menu bar app for quick access
          - Automatic update notifications
          - Customizable settings

          ### Installation
          1. Download the `.dmg` file
          2. Open it and drag the app to your Applications folder
          3. **First launch**: Right-click the app → "Open" → "Open" to bypass Gatekeeper
          4. After first launch, you can open normally

          ### Requirements
          - macOS 13.0 or later

          ### Notes
          This app is **code-signed** with Apple Developer ID for security.

          ⚠️ **Notarization Note**: Due to ongoing issues with Apple's notarization service (6-day outage Oct 8-14, 2025), this release is signed but not notarized. The app is secure and safe to use. You'll see a Gatekeeper warning on first launch - just right-click → Open to proceed. We'll enable notarization once Apple's service is stable.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

